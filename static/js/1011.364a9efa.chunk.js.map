{"version":3,"file":"static/js/1011.364a9efa.chunk.js","mappings":"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","sources":["webpack://middle-way-copy/./src/components/Admin/QAPage/CreateQA/CreateQA.module.scss?9272","components/Admin/QAPage/CreateQA/CreateQA.jsx","webpack://middle-way-copy/./src/components/Admin/QAPage/ListQA/ListQA.module.scss?4fab","components/Admin/QAPage/ListQA/ListQA.jsx","webpack://middle-way-copy/./src/components/Admin/QAPage/QAPage.module.scss?fd80","components/Admin/QAPage/QAPage.jsx","webpack://middle-way-copy/./src/components/Shared/TextAreaField/TextAreaField.module.scss?052e","components/Shared/TextAreaField/TextAreaField.jsx","components/Shared/TextField/fields.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"questionsandanswers\":\"CreateQA_questionsandanswers__hKSaz\",\"questionsandanswers__titleContent\":\"CreateQA_questionsandanswers__titleContent__o32KB\",\"questionsandanswers__partInput\":\"CreateQA_questionsandanswers__partInput__Tnhhl\",\"questionsandanswers__title\":\"CreateQA_questionsandanswers__title__5A7Hy\",\"questionsandanswers__text\":\"CreateQA_questionsandanswers__text__lEAZp\",\"questionsandanswers__btnWrapper\":\"CreateQA_questionsandanswers__btnWrapper__JjJYL\",\"questionsandanswers__link\":\"CreateQA_questionsandanswers__link__rn7ab\"};","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useMediaQuery } from 'react-responsive';\nimport {\n  sendQAData,\n  editQAData,\n} from '../../../../redux/technical/technical-operations';\nimport { clearEditQA } from '../../../../redux/technical/technical-slice';\nimport { getEditQA } from '../../../../redux/technical/technical-selectors';\nimport { getUser } from '../../../../redux/auth/auth-selectors';\nimport { fields } from '../../../Shared/TextField/fields';\nimport TextAreaField from '../../../Shared/TextAreaField/TextAreaField';\nimport Button from '../../../Shared/Button/Button';\n\nimport s from './CreateQA.module.scss';\n\nconst CreateQA = () => {\n  const dispatch = useDispatch();\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1279 });\n  const isDesctop = useMediaQuery({ minWidth: 1280 });\n  const [isPublic, setIsPublic] = useState(false);\n  const editQA = useSelector(getEditQA);\n  const answerOwner = useSelector(getUser);\n  const page = window.location.pathname;\n\n  const { control, handleSubmit, reset, setValue } = useForm({\n    defaultValues: {\n      question: '',\n      answer: '',\n    },\n  });\n\n  useEffect(() => {\n    if (page === '/' || page === '/home') {\n      setIsPublic(true);\n      dispatch(clearEditQA());\n    } else {\n      setIsPublic(false);\n    }\n  }, [dispatch, page]);\n\n  useEffect(() => {\n    if (editQA) {\n      setValue('question', editQA.question);\n      setValue('answer', editQA.answer);\n    } else {\n      reset();\n    }\n  }, [editQA, setValue, reset]);\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    const dataForUpload = {\n      question: data.question,\n      answer: data.answer ? data.answer : '',\n      answerOwner: data.answer && answerOwner ? answerOwner.username : '',\n    };\n    if (!editQA) {\n      dispatch(sendQAData(dataForUpload));\n    } else {\n      dispatch(editQAData({ ...dataForUpload, id: editQA._id }));\n    }\n    reset();\n  };\n\n  return (\n    <section\n      id=\"edit-QA\"\n      className={s.questionsandanswers}\n      style={{\n        paddingTop: isPublic && !isMobile ? '40px' : '0px',\n        paddingBottom: isPublic && isMobile ? '0px' : '40px',\n      }}\n    >\n      <div\n        className={s.questionsandanswers__titleContent}\n        style={{ marginTop: isPublic && !isMobile ? '0px' : '40px' }}\n      >\n        {!isPublic && (\n          <h2\n            className={s.questionsandanswers__title}\n            style={{ marginTop: !isPublic ? '-20px' : '0px' }}\n          >\n            {!editQA\n              ? 'Створити питання / відповідь'\n              : 'Редагувати питання / відповідь'}\n          </h2>\n        )}\n        {isPublic && (\n          <p\n            className={s.questionsandanswers__text}\n            style={{\n              marginTop: isMobile && isPublic ? '-20px' : '0px',\n              marginBottom: isMobile ? '40px' : '40px',\n              textAlign: 'center',\n            }}\n          >\n            Не знайшли відповіді на своє питання? Напишіть нам або\n            <a href=\"tel:+380674474295\">\n              {' '}\n              <span className={s.questionsandanswers__link}>\n                зателефонуйте.\n              </span>\n            </a>\n          </p>\n        )}\n      </div>\n      <form\n        className={s.questionsandanswers__form}\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <div\n          className={s.questionsandanswers__partInput}\n          style={{\n            height:\n              !isPublic && isDesctop\n                ? '278px'\n                : !isPublic && isMobile\n                ? '232px'\n                : !isPublic && isTablet\n                ? '257px'\n                : isPublic && isDesctop\n                ? '120px'\n                : isPublic && isTablet\n                ? '110px'\n                : '103px',\n          }}\n        >\n          <Controller\n            control={control}\n            name=\"question\"\n            rules={{\n              required: 'Question is required',\n              minLength: {\n                value: 10,\n                message: 'Question must have at least 10 characters',\n              },\n            }}\n            render={({ field: { onChange, value }, fieldState }) => (\n              <TextAreaField\n                value={value}\n                rows={4}\n                control={control}\n                handleChange={onChange}\n                error={fieldState.error}\n                {...fields.questions}\n              />\n            )}\n          />\n          {!isPublic && (\n            <Controller\n              control={control}\n              name=\"answer\"\n              rules={{\n                required: 'Answer is required',\n                minLength: {\n                  value: 10,\n                  message: 'Answer must have at least 10 characters',\n                },\n              }}\n              render={({ field: { onChange, value }, fieldState }) => (\n                <TextAreaField\n                  value={value}\n                  rows={4}\n                  control={control}\n                  handleChange={onChange}\n                  error={fieldState.error}\n                  {...fields.answers}\n                />\n              )}\n            />\n          )}\n        </div>\n        <div\n          className={s.questionsandanswers__btnWrapper}\n          style={{\n            justifyContent: isPublic\n              ? 'center'\n              : !isPublic && isMobile\n              ? 'center'\n              : 'flex-start',\n          }}\n        >\n          <Button\n            text={\n              isPublic\n                ? 'Відправити'\n                : !isPublic && editQA?._id\n                ? 'Редагувати'\n                : 'Опублікувати'\n            }\n            btnClass=\"btnLight\"\n          />\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default CreateQA;\n","// extracted by mini-css-extract-plugin\nexport default {\"listqa\":\"ListQA_listqa__iyCYo\",\"listqa__main\":\"ListQA_listqa__main__-lMha\",\"listqa__btnWrapper\":\"ListQA_listqa__btnWrapper__Zpmm0\",\"listqa__authorTextPart\":\"ListQA_listqa__authorTextPart__heJPN\",\"listqa__authorText\":\"ListQA_listqa__authorText__V8Cov\",\"list\":\"ListQA_list__OKprh\",\"open\":\"ListQA_open__oXr3E\",\"text\":\"ListQA_text__DXb0-\",\"textWarning\":\"ListQA_textWarning__cXDx1\",\"fadeIn\":\"ListQA_fadeIn__Jzxjj\"};","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHeaderHeight } from '../../../helpers/HeaderContext/HeaderContext';\nimport {\n  getListQAData,\n  deleteQA,\n} from '../../../../redux/technical/technical-operations';\nimport {\n  getQA,\n  getMessageTechnical,\n  getErrorTechnical,\n} from '../../../../redux/technical/technical-selectors';\nimport { saveEditQA } from '../../../../redux/technical/technical-slice';\nimport Button from 'components/Shared/Button';\nimport s from './ListQA.module.scss';\n\nfunction ListItem({ question, answer, answerOwner, isPublic }) {\n  const [isClicked, setIsClicked] = useState(false);\n\n  const handleClick = () => {\n    setIsClicked(!isClicked);\n  };\n\n  return (\n    <li\n      className={`${s.list} ${isClicked ? s.open : ''}`}\n      onClick={handleClick}\n    >\n      <div style={{ width: '91%' }}>\n        <p>{question}</p>\n        {isClicked && (\n          <div>\n            <p className={`${s.text} ${s.fadeIn}`}>{answer}</p>\n            {!isPublic && (\n              <div className={s.listqa__authorTextPart}>\n                <p className={s.listqa__authorText}>\n                  Відповідь надана {answerOwner}\n                </p>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </li>\n  );\n}\n\nconst ListQA = () => {\n  const dispatch = useDispatch();\n  const headerHeight = useHeaderHeight();\n  const [isPublic, setIsPublic] = useState(false);\n  const listQA = useSelector(getQA);\n  const isError = useSelector(getErrorTechnical);\n  const isMessage = useSelector(getMessageTechnical);\n  const page = window.location.pathname;\n\n  useEffect(() => {\n    dispatch(getListQAData());\n  }, [dispatch, isError, isMessage]);\n\n  useEffect(() => {\n    if (page === '/' || page === '/home') {\n      setIsPublic(true);\n    } else {\n      setIsPublic(false);\n    }\n  }, [page]);\n\n  const handleEdit = data => {\n    dispatch(saveEditQA(data));\n    const element = document.getElementById('edit-QA');\n    if (element) {\n      const offsetTop =\n        element.getBoundingClientRect().top + window.scrollY - headerHeight;\n\n      window.scrollTo({\n        top: offsetTop,\n        behavior: 'smooth',\n      });\n    }\n  };\n\n  const handleDelete = data => {\n    dispatch(deleteQA(data));\n  };\n\n  const filteredQA = isPublic ? listQA.filter(({ answer }) => answer) : listQA;\n\n  return (\n    <div\n      className={s.listqa}\n      style={{ marginBottom: !isPublic ? '20px' : '0px' }}\n    >\n      {listQA.length > 0 && (\n        <ul className={s.listqa__main}>\n          {filteredQA.map(({ _id, question, answer, answerOwner }) => (\n            <React.Fragment key={_id}>\n              <ListItem\n                key={`${_id}-1`}\n                question={question}\n                answer={answer}\n                answerOwner={answerOwner}\n                isPublic={isPublic}\n              />\n              {!isPublic && (\n                <div key={`${_id}+1`} className={s.listqa__btnWrapper}>\n                  <Button\n                    text={!answer ? 'Надати відповідь' : 'Редагувати'}\n                    btnClass=\"btnLight\"\n                    handleClick={() => handleEdit({ _id, question, answer })}\n                  />\n                  <Button\n                    text={'Видалити'}\n                    btnClass=\"btnLight\"\n                    handleClick={() => handleDelete(_id)}\n                  />\n                </div>\n              )}\n            </React.Fragment>\n          ))}\n        </ul>\n      )}\n      {listQA.length === 0 && (\n        <p className={s.textWarning}>\n          Ми готуємо список запитань та відповідей, найближчим часом вони будуть\n          опубліковані.\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ListQA;\n","// extracted by mini-css-extract-plugin\nexport default {\"questionsAndAnswers\":\"QAPage_questionsAndAnswers__dY364\"};","import CreateQA from './CreateQA/CreateQA';\nimport ListQA from './ListQA/ListQA';\nimport s from './QAPage.module.scss';\n\nconst ReviewsPage = () => {\n  return (\n    <section className={s.questionsAndAnswers}>\n      <div className=\"container\">\n        <CreateQA />\n        <ListQA />\n      </div>\n    </section>\n  );\n};\n\nexport default ReviewsPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"TextAreaField_label__KJ7zz\",\"input\":\"TextAreaField_input__-B+a3\",\"hasValue\":\"TextAreaField_hasValue__jfwSG\",\"error\":\"TextAreaField_error__aLDsU\",\"placeholderTop\":\"TextAreaField_placeholderTop__RDTqr\",\"placeholderBottom\":\"TextAreaField_placeholderBottom__69zl0\"};","import { forwardRef } from 'react';\nimport s from './TextAreaField.module.scss';\n\nconst TextAreaField = forwardRef(\n  (\n    {\n      type,\n      name,\n      value,\n      handleChange,\n      placeholder,\n      required,\n      title,\n      className,\n      error,\n      rows,\n    },\n    ref\n  ) => {\n    const labelClass = className ? `${s.label} ${s[className]}` : `${s.label}`;\n    const inputClass = className ? `${s.input} ${s[className]}` : `${s.input}`;\n    const emptyInputClass = 'hasValue';\n\n    return (\n      <label className={labelClass}>\n        <textarea\n          ref={ref}\n          className={`${\n            value !== null && value !== ''\n              ? `${s.input} ${s[emptyInputClass]}`\n              : inputClass\n          }`}\n          type={type}\n          name={name}\n          value={value}\n          onChange={handleChange}\n          required={required}\n          title={title}\n          rows={rows ? rows : 1}\n          cols={1000}\n        />\n        {value !== '' && (\n          <span className={s.placeholderTop}>{placeholder}</span>\n        )}\n        {value === '' && (\n          <span className={s.placeholderBottom}>{placeholder}</span>\n        )}\n        {error && <p className={s.error}>{title}</p>}\n      </label>\n    );\n  }\n);\nexport default TextAreaField;\n","export const fields = {\n  username: {\n    label: 'User name',\n    name: 'username',\n    type: 'text',\n    placeholder: 'User name*',\n    title: '*The Name field must be more than 2 and less than 31 characters',\n    required: true,\n  },\n  email: {\n    label: 'Email',\n    name: 'email',\n    type: 'text',\n    placeholder: 'Email*',\n    title: '*Enter a valid email',\n    required: true,\n  },\n  password: {\n    label: 'Password',\n    name: 'password',\n    type: 'password',\n    placeholder: 'Password*',\n    title:\n      '*The Password field must be more than 2 and less than 21 characters',\n    required: true,\n  },\n  phone: {\n    label: 'Phone',\n    name: 'phone',\n    type: 'tel',\n    placeholder: 'Телефон*',\n    title: '*Enter a valid phone number',\n    required: true,\n  },\n  parentName: {\n    label: 'Parent Name',\n    name: 'parentName',\n    type: 'text',\n    placeholder: \"Ваше ім'я*\",\n    title: '*Enter a valid Name',\n    required: true,\n  },\n  childrenName: {\n    label: 'Children Name',\n    name: 'childrenName',\n    type: 'text',\n    placeholder: \"Iм'я дитини*\",\n    title: '*Enter a valid Name',\n    required: true,\n  },\n  subject: {\n    label: 'Subject',\n    name: 'subject',\n    type: 'text',\n    placeholder: 'Назва події',\n    title: '*The Subject field must be more than 2 characters',\n    required: true,\n  },\n  description: {\n    name: 'description',\n    type: 'text',\n    placeholder: 'Опишіть подію',\n    title: '*The Subject field must be more than 2 characters',\n    required: true,\n  },\n  question: {\n    name: 'question',\n    type: 'text',\n    placeholder: 'Задайте ваше питання',\n    title: '*The Question field must be more than 2 characters',\n    required: false,\n  },\n  nameOwnerReview: {\n    label: 'Name of reviewer',\n    name: 'nameOwnerReview',\n    type: 'text',\n    placeholder: 'ПІБ',\n    title: '*The Name field must be more than 2 characters',\n    required: true,\n  },\n  review: {\n    label: 'Review',\n    name: 'review',\n    type: 'text',\n    placeholder: 'Відгук',\n    title: '*The Name field must be more than 2 characters',\n    required: true,\n  },\n  dataSource: {\n    label: 'Data Source',\n    name: 'dataSource',\n    type: 'text',\n    placeholder: 'Джерело даних',\n    title: '*The Data Source field must be more than 2 characters',\n    required: false,\n  },\n  questions: {\n    label: 'Questions',\n    name: 'questions',\n    type: 'text',\n    placeholder: 'Ваше питання:',\n    title: '*The Question field must be more than 10 characters',\n    required: true,\n  },\n  answers: {\n    label: 'Answers',\n    name: 'answers',\n    type: 'text',\n    placeholder: 'Ваша відповідь на питання:',\n    title: '*The Answers field must be more than 10 characters',\n    required: true,\n  },\n};\n"],"names":["CreateQA","dispatch","useDispatch","isMobile","useMediaQuery","maxWidth","isTablet","minWidth","isDesctop","isPublic","setIsPublic","useState","editQA","useSelector","getEditQA","answerOwner","getUser","page","window","location","pathname","control","handleSubmit","reset","setValue","useForm","defaultValues","question","answer","useEffect","clearEditQA","_jsxs","id","className","s","questionsandanswers","style","paddingTop","paddingBottom","children","questionsandanswers__titleContent","marginTop","_jsx","questionsandanswers__title","questionsandanswers__text","marginBottom","textAlign","href","questionsandanswers__link","questionsandanswers__form","onSubmit","data","e","preventDefault","dataForUpload","username","editQAData","_id","sendQAData","questionsandanswers__partInput","height","Controller","name","rules","required","minLength","value","message","render","_ref","field","onChange","fieldState","TextAreaField","rows","handleChange","error","fields","questions","_ref2","answers","questionsandanswers__btnWrapper","justifyContent","Button","text","btnClass","ListItem","isClicked","setIsClicked","concat","onClick","handleClick","width","ListQA","headerHeight","useHeaderHeight","listQA","getQA","isError","getErrorTechnical","isMessage","getMessageTechnical","getListQAData","filteredQA","filter","length","map","_ref3","React","saveEditQA","element","document","getElementById","offsetTop","getBoundingClientRect","top","scrollY","scrollTo","behavior","handleEdit","handleDelete","deleteQA","ReviewsPage","forwardRef","ref","type","placeholder","title","labelClass","label","inputClass","input","cols","placeholderTop","placeholderBottom","email","password","phone","parentName","childrenName","subject","description","nameOwnerReview","review","dataSource"],"sourceRoot":""}